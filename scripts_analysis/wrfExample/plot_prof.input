#########################################################################
#         INPUT FILE	INPUT FILE	INPUT FILE	                          #
#########################################################################
#						 		
#		PLOT Wind Profiles Statistics	Input to MET_plot_prof.R		
#			
# Version 1.2, May 6, 2013
# -- Pulled many configurable options from MET_plot_prof.R
# -- Cleaned via much more readable formatting
#########################################################################
  ##################################################################################   
  #	Configurable DATE Definitions
  ##################################################################################   
  hs<-0
  he<-23
  ds<-as.numeric(unlist(strsplit(Sys.getenv("AMET_DD")," ")))[1]
  de<-as.numeric(unlist(strsplit(Sys.getenv("AMET_DD")," ")))[2]
  ms<-as.numeric(unlist(strsplit(Sys.getenv("AMET_MM")," ")))[1]
  me<-as.numeric(unlist(strsplit(Sys.getenv("AMET_MM")," ")))[2]
  ys<-as.numeric(unlist(strsplit(Sys.getenv("AMET_YY")," ")))[1]
  ye<-as.numeric(unlist(strsplit(Sys.getenv("AMET_YY")," ")))[2]

  ##################################################################################   
  #	Database/Tables/Query Specifications
  ##################################################################################   
  project <-Sys.getenv("AMET_PROJECT")
  statid  <-unlist(strsplit(Sys.getenv("AMET_SITEID")," "))
	
  figdir		  <-Sys.getenv("AMET_OUT")
  savefile	  <-FALSE
  processprof	<-TRUE
  plotprof	  <-TRUE
  textstats	  <-TRUE

  ##################################################################################   
  #	Extra Plot Options Site Map, Single hourly profile, etc
  ##################################################################################   
  imageplot	        <- as.logical(Sys.getenv("AMET_CONTOUR_PLOT"))	# Shaded and contour plot option, otherwise a shaded plot without contour.
  plotSiteMap       <- as.logical(Sys.getenv("AMET_PROF_SITES"))	  # Site location plot used to help users identify site id's and locaitons
  plotSingleProfile <- as.logical(Sys.getenv("AMET_HOURLY_PROF"))   # Hourly Model-Obs Wind Vector and PT profile plots	
  errorHistPlot     <- as.logical(Sys.getenv("AMET_HIST_PROF"))     # Histogram of RMSE of entire diurnal profile	      
  verticalBoxPlot   <- as.logical(Sys.getenv("AMET_VDIST_PROF"))    # Box plot that depicts distribution of statistics in vertical

  ##################################################################################   
  #  Additional criteria
  ##################################################################################   
	zliml		<-as.numeric(Sys.getenv("AMET_ZLIML"))
	zlimu   <-as.numeric(Sys.getenv("AMET_ZLIMU"))

	initutc <-as.numeric(Sys.getenv("AMET_INITUTC"))
	fcasthr <-c(as.numeric(unlist(strsplit(Sys.getenv("AMET_FCAST")," ")))[1],
              as.numeric(unlist(strsplit(Sys.getenv("AMET_FCAST")," ")))[2])

	min.sample  <-as.numeric(Sys.getenv("AMET_MIN_SAMPLE"))   # Minimum number of datapoints in profile to consider significant
  min.WS.error<-as.numeric(Sys.getenv("AMET_MIN_WS_ERROR"))

  ##################################################################################   
  #	Plot/Output Format
  ##################################################################################   
  plotfmt   <-Sys.getenv("AMET_PTYPE")  # Plot type
  plotsize  <-1.0                       # Plot size magnification (1 is default)
  pwidth    <-1000                      # Width of plot in pixels
  pheight   <-754                       # Height of plot in pixels
  symb      <-15                        # Plot symbol (15-square,19-circle)
  symbsiz   <-0.7*plotsize              # Plot symbol size (0.5 very small to 1.5 large, 1 suites most applications)


  plotopts<-list(plotsize=plotsize, plotfmt=plotfmt,symb=symb,symbsiz=symbsiz,pheight=pheight,pwidth=pwidth)

  ##################################################################################   
  #	Query Definitions and Prep. These are more technical options that should be modified with caution
  ##################################################################################   
  varxtrac	<-" slevel, hlevel , T_mod, T_ob, U_mod,U_ob, V_mod,V_ob, T_mod, SNR, PBL_mod,PBL_ob "
  Hloc	<-4
  Tloc	<-5
  Uloc	<-7
  Vloc	<-9
  SNRloc	<-12
  PBLloc	<-13

  otime	<-0:23
  extra	<-paste(" AND fcast_hr BETWEEN ",fcasthr[1]," and ",fcasthr[2]," ",sep="")
  
  if(initutc < 0) {  extra <-""	}
 
  ##################################################################################   
  #	Variable and Statistics Description Arrays
  ##################################################################################   
  var      <-c("Temperature","Wind Speed","Wind Direction","Vertical Velocity","TKE")
  varid    <-c("T","WS","WD","VV")
  varunits <-c("(K)","(m/s)","(Deg)","","(m)")
  varloc   <-c(1,2,3)
  statname <-c("Count","Mean Absolute Error","Mean Bias","Standard Deviation of Error","Root-Mean-Squared Error","Correlation Coefficient","Index of Agreement","Mean Model","Mean Observation")
  metric   <-c("count","mae","bias","sd","rmse","cor","ioa","meanm","meano")
  statloc  <-c(1,2,3,4,5,6,7,8,9)

  ##  Query String Generation, Do not modify
  varxtrac <-paste(" ob_date, ob_time, ",varxtrac)
  statstr  <-paste(" stat_id ='",statid,"' ",sep="")
  levstr  <-paste(" AND hlevel < ",zlimu)
  table   <-paste(project,"_profiler",sep="")
  otime   <-ifelse(otime<10,paste("0",otime,":00:00",sep=""),paste(otime,":00:00",sep=""))
  var     <-c("Temperature","Wind Speed","Wind Direction","Signal Noise Ratio","PBL Height")
  varid   <-c("T","WS","WD","SNR","PBLH")
  nvar    <-length(var)

  ##################################################################################   
  # Box plot control options
  ################################################################################## 
  statlocBP     <-c(2,3,7)
  custom.limits <-T
  custom.lowlim<-array(0,c(length(statlocBP),length(varloc)))   # lower limit 2-D array for custom plotting (statistic x variable)
  custom.uplim<-array(0,c(length(statlocBP),length(varloc)))   # lower limit 2-D array for custom plotting (statistic x variable)
  custom.lowlim[1,] <- 0.0   # low lim MAE for all variables 0
  custom.lowlim[2,] <- -2.0   # low lim BIAS for all variables 0
  custom.lowlim[3,] <- 0.0   # low lim RMSE for all variables 0
  
  custom.uplim[1,] <- 3.0   # upper lim MAE for all variables 0
  custom.uplim[2,] <- 2.0   # upper lim BIAS for all variables 0
  custom.uplim[3,] <- 1.0   # upper lim RMSE for all variables 0
  ################################################################################## 

  ################################################################################## 
  # Build of MySQL station extraction string. If single station or multiple stations
  # if mutiple, output plots will use GROUP_AVG as station ID.
  ################################################################################## 
  statid  <-unlist(strsplit(Sys.getenv("AMET_SITEID_ALL")," "))
  if( length(statid) == 1)  {
     statstr	<-paste("stat_id='",statid,"'",sep="")
     statid     <-statid
  }
  if( length(statid) > 1)  {  
     statid  <-unlist(strsplit(Sys.getenv("AMET_SITEID_ALL")," "))
     tmp<-"("
     statvar <-"stat_id"
     for(sn in 1:length(statid) ) {
       conj<-" OR "
       if(sn == length(statid)) { conj<-""}
       tmp<-paste(tmp,statvar,"='",statid[sn],"'",conj,sep="")
     }
     statstr	<-paste(tmp,")")
     statid     <-"GROUP_AVG"
   }
  ################################################################################## 
  #	Auto-Realtime Options
  ################################################################################## 
  realtime   <-FALSE		# Option to run script in real-time automated mode
  tserieslen <-10			# Option used in real-time mode to lag stats by "n" days

#########################################################################
#----- 			END OF INPUT FILE	------------------------#
#########################################################################


